###language: android
###jdk: oraclejdk8
###
###sudo: false
###
####cache:
####  directories:
####    - $HOME/gradle/caches/
####    - $HOME/gradle/wrapper/dists/
###
###
###env:
###  global:
###      - ANDROID_API_LEVEL=28
###      - EMULATOR_API_LEVEL=28
###      - ANDROID_BUILD_TOOLS_VERSION=28.0.3
###      - ANDROID_ABI=arm64-v8a
###      - ANDROID_TAG=google_apis
###      - ADB_INSTALL_TIMEOUT=20 # minutes (2 minutes by default)
###
###android:
###  components:
###    - tools # to get the new `repository-11.xml`
###    - platform-tools
###    - tools # to install Android SDK tools 25.1.x
###    - build-tools-$ANDROID_BUILD_TOOLS_VERSION
###    - android-$ANDROID_API_LEVEL
###    - android-$EMULATOR_API_LEVEL
###    # For Google APIs
###    - addon-google_apis-google-$ANDROID_API_LEVEL
###    - addon-google_apis-google-$EMULATOR_API_LEVEL
###    # Google Play Services
###    - extra-google-google_play_services
###    # Support library
###    - extra-android-support
###    # Latest artifacts in local repository
###    - extra-google-m2repository
###    - extra-android-m2repository
###    # Specify at least one system image
###    - sys-img-arm64-v8a-google_apis-$ANDROID_API_LEVEL
###    - sys-img-arm64-v8a-google_apis-$EMULATOR_API_LEVEL
###  licenses:
###    - android-sdk-license-.+
###    - .+
###
###before_script:
###  # Create and start emulator
###  - echo no | android create avd --force -n test -t "android-"$EMULATOR_API_LEVEL --abi $ANDROID_ABI --tag $ANDROID_TAG
###  - emulator -avd test -no-skin -no-audio -no-window &
###  - android-wait-for-emulator
###
###
###script:
###  - ./gradlew clean check connectedCheck -x library:signArchives -PdisablePreDex
###
###deploy:
###  provider: releases
###  github-token: d3748eb233c70834e1dd5d8b7082af1b25a1d295
###  api_key:
###    secure: u9opw/AUlj3RZnoW/1yJugwtuO3MOoLxO48HZ86id+uKmXnIzihmuBzZLXpef+XRhjn5W35wfNUS3VO9zCUkyrhXZMMtXAe2Eqr4ULSAcRbyqp/OCl0GelXMEtOYITgfs06q8cpawCWd6IeZK75u5qzJ+pf8aZ9oZ2mrzwF8LXy4JDSRERBed9IFf6hLZn2ns3GKMaQpdiobnV5jOcFi5dLH1fmAgxOFBJGZmOzXPFhCumZculW45RXjhldJZaCpv7RsyzQySctC8r0RR82RW7MrG/DSL5xKrpsR6EKQiWDBgIJFbVJueN7bww/3NwyQ0nnmKLSohwWnuXvBndzSqEYBos4aiIcfSLLjfSq+uuNAjFn+p3ziKUREGJV04UeV+vlP/kkQJU+BCqPXitCcI/pKHYpI7k/2ahDRi7Xuh+4EkuOvx45dmTxECpf1DJT1h5c0Wz0WnzJda0duMq5J6p5fgcbF1FrHXeT3b3bXnC+14NzHIebYSZ7Xa7paBhUnIPZqM5/pvfCClnGWgyWeAYwT6J2kO++OIcN89Kq0DgW++ukxyjfXGBAnsnIumniQMWtWovLB/qFm2+O+i5/axqfN4rsemm+ucs6w4P+AR1zBqc6njPcQika5yN7pegDVC4HMI6IkLSgQGz0LVWvbPsGCfRCei7SQK8f8YXJREYo=
###
###  # file_glob: true
###  #file: /home/travis/build/TravisCliExample/app/build/outputs/apk/release/*
###  # local_dir: build
###  on:
###  repo: IniyanApp/traviscliexample
###  #branch: master
####    tags: true
###
##
##
##os: linux
##
##sudo: required
##language: android
##jdk: oraclejdk8
##dist : trusty
##before_cache:
##
##  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
##
##  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
##
##cache:
##
##  directories:
##
##    - $HOME/.gradle/caches/
##
##    - $HOME/.gradle/wrapper/
##
##env:
##
##  global:
##
##    - ANDROID_API=28
##
##    - EMULATOR_API=28
##
##    - ANDROID_BUILD_TOOLS=28.0.3
##
##    - ADB_INSTALL_TIMEOUT=5 # minutes
###    - secure: "kYQFW12wY9zzMNqtor4sTeE4k/877t0igpS/AaPon7MNr+ebqEkeg9z6L1sE+81bopDX+0K62AxO4mKVxOiGGGVU5JS1ZFWg/BhPyKCThm1tUzXCBs5s8AxWU9s9MudfTHgPLwsOhvpKogivA0ZXt5iEFrkv57A51qZFMQ0Irl8iAaMiwjzv+FRT26jCCBCKB5jlRwocwOB7wEujlUN289i5y9o/wcWhBmA5YY7y64hdlZEs/bmF7RXXFpsRzmpvcm9rbnffBfSgDXAmnM1U7S9BLNgxtEoXraXlVlejnkti8+7aBmAqbQTto69eLPJlnGZ917BQLuhPqdapMNvLOwGP/CUVkzAMYsIndQafJsleRTYIRTlH2I+/ZMmaCZVUE4dxO97j1Nrbbksqb5zTzxKVJjgF5FpgZoa8KZeKh5TvFzWP5ZON53UcKM34J2D9juV6iNt34yffYq5OPkCblDHPiL9SbK01fGYlgVhdO9w9O/D+ybdsPC32syHnQgNQTH7GZlIJdJzamv9dN4zB/Hqk3LlECMHXWdYxCP/2EnEIFWO9P0TPw+Fb2B0t7hi/8ksvd7O2PaK3JL9i39prR4ZGeNkrJ3EmmM4dOV8CVZpTLrx+FshHgEszkmkn/nuiMrEqdz/4LK0fRsPLXkr9RFd2HJGrW6ng/lPYkVBT60w="
###    - secure: "0Pm10LgXvYeSTGpK6QD3+BCMQv2C5OrBubk67im9R1r9HnxBViyGihZrnOzOdUDnP/j3VwCiuRmWBjmXVmG3c1K+vSpba14H3G9FFKQAwaXcKx3fsMVrXc2NFINjwL8tjKYWAQOPrXC2c1GDQiPOYgWP0YNK17UkAX0nRDZ7nCXZRvlG9xV+TF7lHKgsg7Twjp9hvXZaPJYnGPSyuko6JkBtuGstdptaO7OjfaRCrotiWT848Q/KzOQdVAzTmxMARInMRMXEP+XFkzEh7MKCx1rfz6xVvnA4iTEK8XHmk+/iqpTMFRHr2TpfT0QAF/+4hBpnJ6460ySqybUYd5kgJap+v+lL6w3s8o6gISR6m7YltqelwDeku51ZmgDtOPVmsfJIAd+XQ0SwD0gYd8r//wnNPKssGoGgDqp56g9lVlhzo9ZAkRk2PZh+o8G6vZpARIPnG2a/ENx8tC4QqoiGoR4swrgqDtqU6eruB0dfoNkkr+RiNTKsfJPs4ktQ31dF/qRJW/uLHSPWWrzonn2TE2+wf4pq1lYXadGfl+GhMcuXxTaWP9mEviS2BliGwVHQ8hn2yI40dXfIjZ0yZJPujQfRW/9tbAuKPGFdUm8RcglOpHOdNczMnodq0WfkbIVi/ohYEWmlK8LLvrhafNsevy+gP+c2Fqxw5mI3WnY/T1o="
##
##
##
##
##android:
##
##  components:
##
##    - tools
##
##    - platform-tools
##
##    - build-tools-$ANDROID_BUILD_TOOLS
##
##    - android-$ANDROID_API
##
##    - android-$EMULATOR_API_LEVEL
##
##    - extra-google-m2repository
##
##    - extra-android-m2repository # for design library
##
##    - addon-google_apis-google-19 # google play services
##
##    - sys-img-arm64-v8a-addon-google_apis-google-$ANDROID_API_LEVEL
##
##    - sys-img-arm64-v8a-addon-google_apis-google-$EMULATOR_API_LEVEL
##
##  licenses:
##
##    - android-sdk-preview-license-.+
##
##    - android-sdk-license-.+
##
##    - google-gdk-license-.+
##
##before_install:
##
###  - openssl aes-256-cbc -K $encrypted_c0801aa05af4_key -iv $encrypted_c0801aa05af4_iv -in example_keystore.jks.enc -out example_keystore.jks -d
##  - mkdir "$ANDROID_HOME/licenses" || true
##
##  - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
##  - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
##
##  - chmod +x gradlew
##  - ./gradlew dependencies || true
##
##before_script:
##
##
##  - echo no | android create avd --force -n test -t android-28 --abi arm64-v8a
##
##  - emulator -avd test -no-skin -no-audio -no-window &
##
##  - android-wait-for-emulator
##
##  - adb shell input keyevent 82 &
##
##script:
##
##  - "./gradlew clean build connectedCheck -PdisablePreDex --stacktrace"
##
###before_deploy:
###
###  - cp $TRAVIS_BUILD_DIR/example_keystore.jks $HOME
###
###  - cd app/build/outputs/apk/
###
###  - jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore $HOME/example_keystore.jks -storepass $storepass -keypass $keypass app-release-unsigned.apk ExampleKeystoreAlias
###
###
###  # Verification
###
###  - jarsigner -verify app-release-unsigned.apk
###
###  - "${ANDROID_HOME}/build-tools/24.0.2/zipalign -v 4 app-release-unsigned.apk TravisExample.apk"
##
##deploy:
##
##  provider: releases
##
## # file: TravisExample.apk
##  skip_cleanup: true
##
##  on:
##
##    repo:  IniyanApp/traviscliexample
##
##    tags: true
##
##    jdk: oraclejdk8
##
##
##  api_key:
##    secure: u9opw/AUlj3RZnoW/1yJugwtuO3MOoLxO48HZ86id+uKmXnIzihmuBzZLXpef+XRhjn5W35wfNUS3VO9zCUkyrhXZMMtXAe2Eqr4ULSAcRbyqp/OCl0GelXMEtOYITgfs06q8cpawCWd6IeZK75u5qzJ+pf8aZ9oZ2mrzwF8LXy4JDSRERBed9IFf6hLZn2ns3GKMaQpdiobnV5jOcFi5dLH1fmAgxOFBJGZmOzXPFhCumZculW45RXjhldJZaCpv7RsyzQySctC8r0RR82RW7MrG/DSL5xKrpsR6EKQiWDBgIJFbVJueN7bww/3NwyQ0nnmKLSohwWnuXvBndzSqEYBos4aiIcfSLLjfSq+uuNAjFn+p3ziKUREGJV04UeV+vlP/kkQJU+BCqPXitCcI/pKHYpI7k/2ahDRi7Xuh+4EkuOvx45dmTxECpf1DJT1h5c0Wz0WnzJda0duMq5J6p5fgcbF1FrHXeT3b3bXnC+14NzHIebYSZ7Xa7paBhUnIPZqM5/pvfCClnGWgyWeAYwT6J2kO++OIcN89Kq0DgW++ukxyjfXGBAnsnIumniQMWtWovLB/qFm2+O+i5/axqfN4rsemm+ucs6w4P+AR1zBqc6njPcQika5yN7pegDVC4HMI6IkLSgQGz0LVWvbPsGCfRCei7SQK8f8YXJREYo=
#
#
#language: android
#jdk: oraclejdk8
## Use the Travis Container-Based Infrastructure
#sudo: false
#
##cache:
##  directories:
##    - ${TRAVIS_BUILD_DIR}/gradle/caches/
##    - ${TRAVIS_BUILD_DIR}/gradle/wrapper/dists/
#
#env:
#  global:
#    - ANDROID_API_LEVEL=26
#    - EMULATOR_API_LEVEL=21
#    - ANDROID_BUILD_TOOLS_VERSION=26.0.3
#    - ANDROID_ABI=armeabi-v7a
#    - ANDROID_TAG=google_apis
#    - ADB_INSTALL_TIMEOUT=20 # minutes (2 minutes by default)
#
#android:
#  components:
#    - tools
#    - platform-tools
#    - tools
#    - build-tools-$ANDROID_BUILD_TOOLS_VERSION
#    - android-$ANDROID_API_LEVEL
#    - android-$EMULATOR_API_LEVEL
#    # For Google APIs
#    - addon-google_apis-google-$ANDROID_API_LEVEL
#    - addon-google_apis-google-$EMULATOR_API_LEVEL
#    # Google Play Services
#    - extra-google-google_play_services
#    # Support library
#    - extra-android-support
#    # Latest artifacts in local repository
#    - extra-google-m2repository
#    - extra-android-m2repository
#    # Specify at least one system image
#    - sys-img-armeabi-v7a-google_apis-$ANDROID_API_LEVEL
#    - sys-img-armeabi-v7a-google_apis-$EMULATOR_API_LEVEL
#
#before_script:
#  # Create and start emulator
#  - echo no | android create avd --force -n test -t "android-"$EMULATOR_API_LEVEL --abi $ANDROID_ABI --tag $ANDROID_TAG
#  - emulator -avd test -no-skin -no-audio -no-window &
#  - android-wait-for-emulator
#
#script:
#  - ./gradlew clean check connectedCheck -x library:signArchives -PdisablePreDe
#
#
#
##
##
##
##
##
##language: android
##jdk: oraclejdk8
##
###sudo: false
##
##android:
##  components:
##    # Uncomment the lines below if you want to
##    # use the latest revision of Android SDK Tools
##    - tools
##    - platform-tools
##    - tools
##
##    # The BuildTools version used by your project
##    - build-tools-26.0.1
##
##    # The SDK version used to compile your project
##    - android-26
##
##    # Additional components
##    - extra-google-google_play_services
##    - extra-google-m2repository
##    - extra-android-m2repository
##    # - addon-google_apis-google-19
##
##    # Specify at least one system image,
##    # if you need to run emulator(s) during your tests
##    - sys-img-armeabi-v7a-android-22
##    - sys-img-armeabi-v7a-android-17
##
###before_script:
###  - echo no | android create avd --force -n test -t android-21 --abi armeabi-v7a
###  - emulator -avd test -no-skin -no-audio -no-window &
###  - android-wait-for-emulator
###  - adb shell input keyevent 82 &
##
##install: skip
##
### env:
###   global:
###     - CACHE_DIR=$([ $TRAVIS_OS_NAME = 'linux' ] && echo "FOO" || echo "BAR")
##
### cache:
###   directories:
###     - $CACHE_DIR
##
### env:
###   global:
###     - PATH=/usr/local/android-sdk/tools/bin:$PATH
##
##script: skip
### android:
###   components:
###     - tools
###     - platform-tools
###     - tools
##
###     - android-25
##
###     - build-tools-25.0.2
###     - extra
###     - extra-google-m2repository
###     - extra-android-m2repository
###     - extra-android-support
##
### jdk: oraclejdk8
##
##matrix:
##  include:
##    - sudo: false
##      dist: precise
##      env: DIST=precise STACK=EC2
##    # - sudo: required
##    #   dist: precise
##    #   env: DIST=precise STACK=GCE
##    # - sudo: false
##    #   dist: trusty
##    #   env: DIST=trusty STACK=EC2
##    # - sudo: required
##    #   dist: trusty
##    #   env: DIST=trusty STACK=GCE
##    # - sudo: false
##    #   dist: trusty
##    #   group: edge
##    #   env: DIST=trusty STACK=EC2 GROUP=edge
##    # - sudo: required
##    #   dist: trusty
##    #   group: edge
##    #   env: DIST=trusty STACK=GCE GROUP=edge
###     - os: osx
##
##
##notifications:
##  email: false
##
##    #  slack:
##    #  rooms:
##    #    - secure: "KZTfjxhkOdDDZYD2ThBILt2ShYtdEee3PudFZlQBfpxG9N470GfxnKVfOl7Odu4lN6cIupwC4S4BnehubEywSR99l60VmfhePUCTqDLYy+iR9+guTvaECdXdaau3jTKhFdu5u60ITsiw5Yb+hwAaGFO0HmQhqR9XVr/U8IGQlok="
##    #  template:
##    #    - "Build <%{build_url}|#%{build_number}> (<%{compare_url}|%{commit}>) of %{repository}@%{branch} by %{author} %{result} in %{duration} (elapsed time: %{elapsed_time}) subject: %{commit_subject} message: %{commit_message} foobar"
##    #  on_success: always
##


language: android
sudo: required
jdk: oraclejdk8

env:
  global:
    - ANDROID_API_LEVEL=28
    - ANDROID_BUILD_TOOLS_VERSION=28.0.3
    - ANDROID_ABI=armeabi-v7a

android:
  components:
    - tools
    - platform-tools
    - tools
    - extra-android-m2repository
  licenses:
    - 'android-sdk-preview-license-52d11cd2'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'

before_install:
  - touch $HOME/.android/repositories.cfg
  - yes | sdkmanager "platforms;android-28"
  - yes | sdkmanager "build-tools;28.0.3"

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache

before_script:
  - chmod +x gradlew

script:
  - ./gradlew clean
  - ./gradlew assembleDebug

#
#
#
#sudo: true
#language: bash
## ignored on non-linux platforms, but bionic is required for nested virtualization
#dist: bionic
#
#stages:
#  - install
#  - test
#  - cache
#
#env:
#  global:
#    - BUILD_TOOLS=28.0.3
#    - COMPILE_SDK_VERSION=29
#    - ABI=x86_64
#    - ADB_INSTALL_TIMEOUT=8
#    - ANDROID_HOME=${HOME}/android-sdk
#    - ANDROID_TOOLS_URL="https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip"
#    - EMU_FLAVOR=default # use google_apis flavor if no default flavor emulator
#    - GRAVIS="https://raw.githubusercontent.com/DanySK/Gravis-CI/master/"
#    - JDK="1.8"
#    - TOOLS=${ANDROID_HOME}/tools
#    # PATH order is incredibly important. e.g. the 'emulator' script exists in more than one place!
#    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
#  matrix:
#    # - API=15 ABI=x86 EMU_CHANNEL="--channel=4" # ERROR: failed to start emulator
#    # - API=16 ABI=x86 AUDIO=-no-audio # ERROR: fails with com.android.ddmlib.InstallException: Unknown failure: Error: Unknown option: -d
#    # - API=17 ABI=x86 # FIXME - AdapterTest.testSetOccupancyVisibilityAndColor() - java.lang.NoSuchMethodError: No virtual method getColor()Landroid/content/res/ColorStateList; in class Landroid/graphics/drawable/GradientDrawable
#    # - API=18 ABI=x86 # FIXME - AdapterTest.testSetOccupancyVisibilityAndColor() - java.lang.NoSuchMethodError: No virtual method getColor()Landroid/content/res/ColorStateList; in class Landroid/graphics/drawable/GradientDrawable
#    # - API=19 ABI=x86 # FIXME - AdapterTest.testSetOccupancyVisibilityAndColor() - java.lang.NoSuchMethodError: No virtual method getColor()Landroid/content/res/ColorStateList; in class Landroid/graphics/drawable/GradientDrawable
#    # API 20 was Android Wear only
#    # - API=21 ABI=x86_64 # FIXME - AdapterTest.testSetOccupancyVisibilityAndColor() - java.lang.NoSuchMethodError: No virtual method getColor()Landroid/content/res/ColorStateList; in class Landroid/graphics/drawable/GradientDrawable
#    # - API=22 ABI=x86_64 # FIXME - AdapterTest.testSetOccupancyVisibilityAndColor() - java.lang.NoSuchMethodError: No virtual method getColor()Landroid/content/res/ColorStateList; in class Landroid/graphics/drawable/GradientDrawable
#    # - API=23 ABI=x86_64 # FIXME - AdapterTest.testSetOccupancyVisibilityAndColor() - java.lang.NoSuchMethodError: No virtual method getColor()Landroid/content/res/ColorStateList; in class Landroid/graphics/drawable/GradientDrawable
#    - API=24 ABI=x86_64 # Works
#    - API=25 ABI=x86_64 # Works
#    - API=26 ABI=x86_64 # Works
#    - API=27 ABI=x86_64 # Works
#    - API=28 ABI=x86_64 # Works
#    - API=29 ABI=x86_64 # Works
#
#before_install:
#  # This section may run on all platforms, and may run for unit tests or for coverage finalization
#  # It should not make assumptions about os platform or desired tool installation
#
#  # Set up JDK 8 for Android SDK - Java is universally needed: codacy, unit tests, emulators
#  - curl "${GRAVIS}.install-jdk-travis.sh" --output ~/.install-jdk-travis.sh
#  - export TARGET_JDK="${JDK}"
#  - JDK="1.8"
#  - source ~/.install-jdk-travis.sh
#
#  # Set up Android SDK - this is needed everywhere but coverage finalization
#  - wget -q "${ANDROID_TOOLS_URL}" -O android-sdk-tools.zip
#  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
#  - rm android-sdk-tools.zip
#  - mkdir ~/.android # avoid harmless sdkmanager warning
#  - echo 'count=0' > ~/.android/repositories.cfg # avoid harmless sdkmanager warning
#  - yes | sdkmanager --licenses >/dev/null # accept all sdkmanager warnings
#  - echo y | sdkmanager --no_https "platform-tools" >/dev/null
#  - echo y | sdkmanager --no_https "tools" >/dev/null # A second time per Travis docs, gets latest versions
#  - echo y | sdkmanager --no_https "build-tools;$BUILD_TOOLS" >/dev/null # Implicit gradle dependency - gradle drives changes
#  - echo y | sdkmanager --no_https "platforms;android-$COMPILE_SDK_VERSION" >/dev/null # We need the API of the current compileSdkVersion from gradle.properties
#
#install:
#  # In our setup, install only runs on matrix entries we want full emulator tests on
#  # That only happens currently on linux, so this section can assume linux + emulator is desired
#  # Download required emulator tools
#  - echo y | sdkmanager --no_https "platforms;android-$API" >/dev/null # We need the API of the emulator we will run
#  - echo y | sdkmanager --no_https "emulator" >/dev/null
#  - echo y | sdkmanager --no_https "system-images;android-$API;$EMU_FLAVOR;$ABI" >/dev/null # install our emulator
#
#  # Set up KVM on linux for hardware acceleration. Manually here so it only happens for emulator tests, takes ~30s
#  - sudo -E apt-get -yq --no-install-suggests --no-install-recommends install bridge-utils libpulse0 libvirt-bin qemu-kvm virtinst ubuntu-vm-builder
#  - sudo adduser $USER libvirt
#  - sudo adduser $USER kvm
#
#  # Create an Android emulator
#  - echo no | avdmanager create avd --force -n test -k "system-images;android-$API;$EMU_FLAVOR;$ABI" -c 10M
#  - |
#    EMU_PARAMS="-verbose -no-snapshot -no-window -gpu swiftshader_indirect -camera-back none -camera-front none -selinux permissive -qemu -m 2048"
#    EMU_COMMAND="emulator"
#    # This double "sudo" monstrosity is used to have Travis execute the
#    # emulator with its new group permissions and help preserve the rule
#    # of least privilege.
#    sudo -E sudo -u $USER -E bash -c "${ANDROID_HOME}/emulator/${EMU_COMMAND} -avd test ${AUDIO} ${EMU_PARAMS} &"
#  # Wait for emulator to be ready
#  - ./tools/android-wait-for-emulator.sh
#  - adb shell input keyevent 82 &
#
#  # Switch back to our target JDK version to build and run tests
#  - JDK="${TARGET_JDK}"
#  - source ~/.install-jdk-travis.sh
#
#script:
#  - if [ "$API" != "NONE" ]; then ./gradlew test check connectedObaGoogleDebugAndroidTest -x lint --stacktrace; fi
#
#before_cache:
#  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
#  - curl "${GRAVIS}.clean_gradle_cache.sh" --output ~/.clean_gradle_cache.sh
#  - bash ~/.clean_gradle_cache.sh > /dev/null
#
#cache:
#  directories:
#    - $HOME/.gradle/caches/
#    - $HOME/.gradle/wrapper/
#
#notifications:
#  webhooks:
##    # Integration with Gitter (https://gitter.im/OneBusAway/onebusaway-android)
##    urls:
##      - https://webhooks.gitter.im/e/a579a4e7a21ff6ee51a1
#    on_success: change
#    on_failure: always